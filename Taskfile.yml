# See: https://taskfile.dev/#/usage
version: "3"

vars:
  DEFAULT_GO_PACKAGES:
    sh: echo $(go list ./... | tr '\n' ' ')

tasks:
  check:
    desc: Check for problems with the project
    deps:
      - task: go:vet
      - task: go:lint
      - task: go:test
      - task: go:test-integration
      - task: python:lint
      - task: general:check-spelling

  format:
    desc: Format all files
    deps:
      - task: go:format
      - task: python:format
      - task: general:format-prettier

  go:build:
    desc: Build the project
    cmds:
      - go build -v {{.GO_BUILD_FLAGS}}

  go:test:
    desc: Run unit tests
    cmds:
      - go test -v -short -run '{{default ".*" .GO_TEST_REGEX}}' {{default "-timeout 10m -coverpkg=./... -covermode=atomic" .GO_TEST_FLAGS}} -coverprofile=coverage_unit.txt {{default .DEFAULT_GO_PACKAGES .GO_PACKAGES}}

  go:test-integration:
    desc: Run integration tests
    cmds:
      - task: go:build
      - poetry install --no-root
      - poetry run pytest test

  go:vet:
    desc: Check for errors in Go code
    cmds:
      - go vet {{default .DEFAULT_GO_PACKAGES .GO_PACKAGES}}

  go:lint:
    desc: Lint Go code
    cmds:
      - go get golang.org/x/lint/golint
      - |
        GOLINT_PATH="$(go list -f '{{"{{"}}.Target{{"}}"}}' golang.org/x/lint/golint || echo "false")"
        "$GOLINT_PATH" \
          {{default "-min_confidence 0.8 -set_exit_status" .GO_LINT_FLAGS}} \
          {{default .DEFAULT_GO_PACKAGES .GO_PACKAGES}}

  go:format:
    desc: Format Go code
    cmds:
      - go fmt {{default .DEFAULT_GO_PACKAGES .GO_PACKAGES}}

  python:lint:
    desc: Lint Python code
    cmds:
      - poetry install --no-root
      - poetry run flake8 --show-source

  python:format:
    desc: Automatically formats Python files
    cmds:
      - poetry install --no-root
      - poetry run black .

  general:format-prettier:
    desc: Format all supported files with Prettier
    cmds:
      - npx prettier --write .

  general:check-spelling:
    desc: Check for commonly misspelled words
    cmds:
      - poetry install --no-root
      - poetry run codespell {{.CODESPELL_SKIP_OPTION}} {{.CODESPELL_IGNORE_WORDS_OPTION}}

  general:correct-spelling:
    desc: Correct commonly misspelled words where possible
    cmds:
      - poetry install --no-root
      - poetry run codespell --write-changes {{.CODESPELL_SKIP_OPTION}} {{.CODESPELL_IGNORE_WORDS_OPTION}}
